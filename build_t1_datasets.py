from pyscf import gto
from generate_t1_df import generate_t1_df
import pandas as pd
from datetime import datetime


training_molecules = [
    """
    H1	0.0000	0.0000	0.0000
    H2	0.0000	0.0000	0.7414
    """,
    """
    H1  0.0000  0.0000  0.0000
    H2  0.0000  0.0000  0.8155
    """,
    """
    H1  0.0000  0.0000  0.0000
    H2  0.0000  0.0000  0.6673
    """,
    """
    O1	0.0000	0.0000	0.1173
    H2	0.0000	0.7572	-0.4692
    H3	0.0000	-0.7572	-0.4692
    """,
    """
    O1   0.0000  0.0000  0.1173
    H2   0.0000  0.8329  -0.5279
    H3   0.0000  -0.7572 -0.4692
    """,
    """
    O1   0.0000  0.0000  0.1173
    H2   0.0000  0.6815  -0.4106
    H3   0.0000  -0.7572 -0.4692
    """,
    """
    O1   0.0000  0.0000  0.1173
    H2   0.0000  0.7572  -0.4692
    H3   0.0000  -0.8510 -0.3222
    """,
    """
    O1   0.0000  0.0000  0.1173
    H2   0.0000  0.7572  -0.4692
    H3   0.0000  -0.6383 -0.5968
    """
    """
    C1	0.0000	0.0000	0.0000
    H2	0.6276	0.6276	0.6276
    H3	0.6276	-0.6276	-0.6276
    H4	-0.6276	0.6276	-0.6276
    H5	-0.6276	-0.6276	0.6276
    """,
    """
    C1   0.0000  0.0000  0.0000
    H2   0.5648  0.5648  0.5648
    H3   0.6276  -0.6276 -0.6276
    H4   -0.6276 0.6276  -0.6276
    H5   -0.6276 -0.6276 0.6276
    """,
    """
    C1   0.0000  0.0000  0.0000
    H2  0.6904  0.6904  0.6904
    H3   0.6276  -0.6276 -0.6276
    H4   -0.6276 0.6276  -0.6276
    H5   -0.6276 -0.6276 0.6276
    """,
    """
    C1   0.0000  0.0000  0.0000
    H2   0.6276  0.6276  0.6276
    H3   0.7847  -0.5319 -0.5319
    H4   -0.6276 0.6276  -0.6276
    H5   -0.6276 -0.6276 0.6276
    """,
    """
    C1	0.0000	0.0000	0.6695
    C2	0.0000	0.0000	-0.6695
    H3	0.0000	0.9289	1.2321
    H4	0.0000	-0.9289	1.2321
    H5	0.0000	0.9289	-1.2321
    H6	0.0000	-0.9289	-1.2321
    """,
    """
    C1   0.0000  0.0000  0.6695
    C2   0.0000  0.0000  -0.6695
    H3   0.0000  0.7947  1.4096
    H4   0.0000  -0.9289 1.2321
    H5   0.0000  0.9289  -1.2321
    H6   0.0000  -0.9289 -1.2321
    """,
    """
    C1   0.0000  0.0000  0.6695
    C2   0.0000  0.0000  -0.6695
    H3   0.0000  1.0241  1.0310
    H4   0.0000  -0.9289 1.2321
    H5   0.0000  0.9289  -1.2321
    H6   0.0000  -0.9289 -1.2321
    """,
    """
    C1   0.0000  0.0000  0.6695
    C2   0.0000  0.0000  -0.6695
    H3   0.0000  1.0263  1.0245
    H4   0.0000  -0.9289 1.2321
    H5   0.0000  0.9289  -1.2321
    H6   0.0000  -0.9289 -1.2321
    """,
    """
    C1   0.0000  0.0000  0.6695
    C2   0.0000  0.0000  -0.6695
    H3   0.0000  0.7901  1.4146
    H4   0.0000  -0.9289 1.2321
    H5   0.0000  0.9289  -1.2321
    H6   0.0000  -0.9289 -1.2321
    """,
    """
    C1   0.0000  0.0000  0.6695
    C2   0.0000  0.0000  -0.8034
    H3   0.0000  0.9289  1.2321
    H4   0.0000  -0.9289 1.2321
    H5   0.0000  0.9289  -1.3660
    H6   0.0000  -0.9289 -1.3660
    """,
    """
    C1   0.0000  0.0000  0.6695
    C2   0.0000  0.0000  -0.5356
    H3   0.0000  0.9289  1.2321
    H4   0.0000  -0.9289 1.2321
    H5   0.0000  0.9289  -1.0982
    H6   0.0000  -0.9289 -1.0982
    """,
    """
    C1   0.0000  0.0000  0.6695
    C2   0.0000  0.0000  -0.6695
    H3   0.0000  1.0218  1.2884
    H4   0.0000  -0.9289 1.2321
    H5   0.0000  0.9289  -1.2321
    H6   0.0000  -0.9289 -1.2321
    """,
    """
    C1   0.0000  0.0000  0.6695
    C2   0.0000  0.0000  -0.6695
    H3   0.0000  0.8360  1.1758
    H4   0.0000  -0.9289 1.2321
    H5   0.0000  0.9289  -1.2321
    H6   0.0000  -0.9289 -1.2321
    """,
    """
    C1	0.0000	0.0000	0.7680
    C2	0.0000	0.0000	-0.7680
    H3	-1.0192	0.0000	1.1573
    H4	0.5096	0.8826	1.1573
    H5	0.5096	-0.8826	1.1573
    H6	1.0192	0.0000	-1.1573
    H7	-0.5096	-0.8826	-1.1573
    H8	-0.5096	0.8826	-1.1573
    """,
    """
    N1	0.0000	0.0000	0.0000
    H2	0.0000	-0.9377	-0.3816
    H3	0.8121	0.4689	-0.3816
    H4	-0.8121	0.4689	-0.3816
    """,
    """
    N1   0.0000  0.0000  0.0000
    H2   0.0000  -0.8439 -0.3434
    H3   0.8121  0.4689  -0.3816
    H4   -0.8121 0.4689  -0.3816
    """,
    """
    N1   0.0000  0.0000  0.0000  
    H2   0.0000  -1.0315 -0.4198
    H3   0.8121  0.4689  -0.3816
    H4   -0.8121 0.4689  -0.3816
    """,
    """
    N1   0.0000  0.0000  0.0000
    H2   0.0000  -0.9377 -0.3816
    H3   0.7530  0.6160  -0.2801
    H4   -0.8121 0.4689  -0.3816
    """,
    """
    N1   0.0000  0.0000  0.0000
    H2   0.0000  -0.9377 -0.3816
    H3   0.8431  0.3056  -0.4699
    H4   -0.8121 0.4689  -0.3816
    """,
    """
    C1	0.0000	0.0000	0.0000
    O2	0.0000	0.0000	1.1621
    O3	0.0000	0.0000	-1.1621
    """,
    """
    C1	0.0000	0.0000	0.0000
    O2	0.0000	0.0000	1.1282
    """,
    """
    F1	0.0000	0.0000	0.0000
    H2	0.0000	0.0000	0.9168
    """,
    """
    N1	0.0000	0.6260	0.0000
    N2	0.0000	-0.6260	0.0000
    H3	0.9867	0.9145	0.0000
    H4	-0.9867	-0.9145	0.0000
    """,
    """
    N1	0.0000	0.6319	-0.1237	
    N2	0.0000	-0.6319	-0.1237	 
    H3	0.0000	1.0214	0.8661	
    H4	0.0000	-1.0214	0.8661
    """,
    """
    C1	0.0000	0.0000	0.0000
    H2	0.0000	0.0000	1.0640
    N3	0.0000	0.0000	-1.1560
    """,
    """
    C1	0.0000	0.0000	-0.7405
    N2	0.0000	0.0000	0.4321
    H3	0.0000	0.0000	1.4183
    """,
    """
    O1	0.0000	0.7375	-0.0528
    O2	0.0000	-0.7375	-0.0528
    H3	0.8190	0.8170	0.4220
    H4	-0.8190	-0.8170	0.4220
    """,
    """
    F1	0.0000	0.0000	0.0000
    F2	0.0000	0.0000	1.4119
    """
    """
    N1	0.0000	0.0000	0.5488
    N2	0.0000	0.0000	-0.5488
    """,
    """
    O1	0.0529	0.7143	0.0000
    H2	-0.8995	0.8346	0.0000
    F3	0.0529	-0.7277	0.0000
    """,
    """
    O1	0.0000	0.0000	0.0000
    O2	0.0000	1.0885	0.6697
    O3	0.0000	-1.0885	0.6697
    """
]

training_ions = [
    """
    O1	0.0000	0.0000	0.0000
    H2	0.0000	0.0000	0.9640
    """,
    """
    N1	0.0000	0.0000	0.0000	 	
    H2	0.6896	0.6896	0.6896	 	
    H3	-0.6896	-0.6896	0.6896	 	
    H4	-0.6896	0.6896	-0.6896	 	
    H5	0.6896	-0.6896	-0.6896
    """
]

testing_molecules = [
    """
    O1	0.0000	0.0000	1.2050
    C2	0.0000	0.0000	0.0000
    H3	0.0000	0.9429	-0.5876
    H4	0.0000	-0.9429	-0.5876
    """,
    """
    C1	1.1879	-0.3829	0.0000
    C2	0.0000	0.5526	0.0000
    O3	-1.1867	-0.2472	0.0000
    H4	-1.9237	0.3850	0.0000
    H5	2.0985	0.2306	0.0000
    H6	1.1184	-1.0093	0.8869
    H7	1.1184	-1.0093	-0.8869
    H8	-0.0227	1.1812	0.8852
    H9	-0.0227	1.1812	-0.8852
    """,
    """
    C1	0.0583	0.7129	0.0000	 	
    N2	0.0583	-0.7726	0.0000	 	
    H3	-0.9425	1.1529	0.0000	 	
    H4	0.5877	1.0695	0.8821	 	
    H5	0.5877	1.0695	-0.8821	 	
    H6	-0.4953	-1.0804	-0.8165	 	
    H7	-0.4953	-1.0804	0.8165
    """,
    """
    H1	0.0000	-0.9718	0.9211
    N2	0.0000	0.0648	0.5834
    O3	0.0000	0.0648	-0.6256
    """	
]

testing_ions = [
    """
    C1	0.0000	0.0000	0.0000
    N2	0.0000	0.0000	1.1770
    """,
    """
    O1	0.0000	0.0000	0.0684	
    H2	0.0000	0.9581	-0.1825	 
    H3	0.8298	-0.4791	-0.1825	
    H4	-0.8298	-0.4791	-0.1825
    """

]


def build_mol(geom: str, *, charge: int = 0, spin: int | None = None, basis: str = "sto-3g", unit: str = "Angstrom") -> gto.Mole:

    mol = gto.Mole()
    mol.atom = geom
    mol.unit = unit
    mol.basiss = basis
    mol.charge = charge
    if spin is not None:
        mol.spin = spin
    mol.build()
    return mol

def dfs_from_geoms(geoms: list[str], *, 
                   charges: list[int]| None = None,
                   spins: list[int] | None = None,
                   basis: str = 'sto-3g',
                   unit: str = "Angstrom") -> pd.DataFrame:
    
    dfs = []
    for i, geom in enumerate(geoms):
        q = 0 if charges is None else charges[i]
        s = None if spins is None else spins[i]
        mol = build_mol(geom, charge = q, spin = s, basis = basis, unit = unit)
        df = generate_t1_df(mol)
        dfs.append(df)
    
    return pd.concat(dfs, ignore_index = True)


training_ion_charges = [-1, +1]
testing_ion_charges = [-1, +1]

train_neutral_df = dfs_from_geoms(training_molecules)
train_ion_df = dfs_from_geoms(training_ions, charges = training_ion_charges)
training_df = pd.concat([train_neutral_df, train_ion_df], ignore_index=True)

test_neutral_df = dfs_from_geoms(testing_molecules)
test_ion_df = dfs_from_geoms(testing_ions, charges = testing_ion_charges)
testing_df = pd.concat([test_neutral_df, test_ion_df], ignore_index= True)

stamp = datetime.now().strftime("%Y%m%d_%H%M%S")
train_parquet = f"./t1_pairs_training_{stamp}.parquet"
test_parquet = f"./t1_pairs_testing_{stamp}.parquet"

try:
    training_df.to_parquet(train_parquet, index = False)
    testing_df.to_parquet(test_parquet, index = False)
    print(f"Saved Parquet:\n {train_parquet}\n {test_parquet}")
except Exception as e:
     print(f"[warn] Parquet save failed ({e}). Install 'pyarrow' or 'fastparquet' to enable Parquet export.")